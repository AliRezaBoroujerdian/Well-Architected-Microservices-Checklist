# چک‌لیست معماری مناسب برای میکروسرویس‌ها
Well-Architected Microservices Checklist
*نسخه‌ی اول - ۱۴۰۴/۰۳/۱۲*
**علیرضا بروجردیان - کارشناس معماری نرم‌افزار**

## Operational Excellence
برتری عملیاتی

این بخش بر حوزه‌هایی تمرکز دارد که می‌توانند به بهبود عملیاتی میکروسرویس‌ها کمک کنند.

### Ownership
مالکیت

- مکانیزمی برای شناسایی مالکیت سرویس (توسعه و زمان اجرا) (مثلاً: استفاده از تگ‌ها (tags)، برچسب‌ها (labels) و غیره)
- نقاط تماس (Point of contacts) برای به‌روزرسانی‌ها و تغییرات
- فرایند و ماتریس (matrix) ارجاع (Escalation) 
- اعمال نمی‌شود

### Logging & Monitoring
ثبت لاگ و مانیتورینگ (پایش)

- برنامه (Application telemetry)
- کاربران (User activity telemetry)
- وابستگی‌ها (Dependency telemetry)
- تراکنش‌ها (Transaction traceability)
- اعمال نمی‌شود

### Observability
قابلیت مشاهده

- حجم کار (Workload health)
    - شناسایی KPIها و معیارها (Identify KPIs and metrics)
    - در دسترس بودن معیارهای پایه (Metrics Baseline available)
    - الگوهای ترافیک و معیارهای مورد انتظار (Expected traffic and metrics patterns)
    - بازنگری و تنظیم KPI و معیارها (Iterate KPI and Metrics review and adjustments)
    - ایجاد داشبورد و راه‌اندازی (Dashboard creation and on-boarding)
    - وضعیت درخواست/تراکنش HTTP، زمان و غیره در NewRelic یا Application Performance Monitoring وارد می‌شود.
    - سیاست‌های هشدار و کانال‌های اعلان در NewRelic یا APM تنظیم می‌شوند.
- مکانیزم ردیابی (Tracing mechanism) پیاده‌سازی شده است.

### Deployment/Rollback Automation
خودکارسازی استقرار و بازگشت به نسخه قبلی

- استفاده از کنترل نسخه (Version control)
- استراتژی‌های تست تعریف و اجرا شده‌اند
    - تست‌های بار موفقیت‌آمیز بوده‌اند
- خودکارسازی استقرار و بازگشت
    - قابلیت بازگشت (Rollback)
        - خودکار
        - فرایند دستی
- استراتژی‌های استقرار - Canary, Blue/Green و غیره
- استراتژی به‌روزرسانی‌های امنیتی
- زیرساخت غیرقابل تغییر (Immutable infra)
- مستندات مورد نیاز
- ملاحظات خاص محیطی (IIS، Kubernetes و …)

### Operational Readiness
آمادگی عملیاتی

- تایید معماری (Architecture Approval)
- تایید امنیت (Security Approval)
- انتشار در دایرکتوری سرویس (Published in service directory)
- مستندات API موجود (API documentation available)
- Runbook در دسترس
- Playbook در دسترس
- ظرفیت تیم عملیات (Operations team capacity)
- طراحی و اجرای یک شبیه‌سازی کنترل‌شده از شرایط بحرانی واقعی یا بار بالا (Game day plan and readiness)
    - خاموش کردن یکی از گره‌های دیتابیس برای تست Failover
    - ایجاد افزایش ترافیک ناگهانی برای مشاهده Auto-scaling
    - تأخیر مصنوعی در ارتباط بین میکروسرویس‌ها برای بررسی رفتار Retry
    - غیرفعال کردن یک وابستگی حیاتی برای بررسی میزان تاب‌آوری سیستم

## Security
امنیت

این بخش جنبه‌های امنیت معماری و زمان اجرا (runtime) یک سرویس مشخص را پوشش می‌دهد.

### Exposure
در معرض بودن

- سرویس خارجی (External service)
    - آیا جزو API Gateway است؟
- سرویس داخلی (Internal service)
    - آیا جزو Service Mesh است؟
- منطبق بر نیازمندی‌ها (Governance and Compliance)
- ریسک‌ها شناسایی شده‌اند

### Secure Operations
عملیات امن

- شناسایی و تعیین فرایند پایش مداوم آسیب‌پذیری امنیتی، به‌روزرسانی‌ها و رفع آنها
- شناسایی مدل تهدید (Threat Model)
- شناسایی هرگونه trade-off، ریسک در مقابل مزایا
- استفاده از Hardened Container Image تایید شده توسط InfoSec (تیم امنیت سازمان)
    - بسته‌های غیرضروری حذف شده‌اند.
    - تنظیمات پیش‌فرض ناامن اصلاح شده‌اند.
    - آسیب‌پذیری‌ها پچ (Patch) شده‌اند.
    - حداقل دسترسی‌ها اعمال شده‌اند.
    - ایمیج‌های اسکن‌شده و امن‌سازی‌شده توسط ابزارهایی مثل Anchore, Trivy, Clair
- نصب ابزارهای امنیتی مورد نیاز (agents/sidecars)

### IAM, Authentication and Authorization
مدیریت هویت، احراز هویت و مجوزدهی

- شناسایی مالکین سرویس و سطح دسترسی مورد نیاز
- استفاده از حداقل دسترسی (least-privilege) در roles and policies
- ایزوله کردن منابع با namespace (در اصطلاح Kubernetes) و دسترسی حداقلی به سرویس‌ها و نقش‌ها
- پیاده‌سازی روش‌های احراز هویت مثل Mutual TLS، JWT
- استفاده از ACL در صورت نیاز
- استفاده از گواهی‌نامه‌ها و اعتبارنامه‌های کوتاه‌مدت
- پیاده‌سازی گردش (rotation) اعتبارنامه‌ها و گواهی‌نامه‌ها

### Data-In-Transit
داده در حال انتقال

- استفاده از پروتکل‌ها و روش‌های رمزنگاری برای ارتباط همزمان (synchronous) سرویس به سرویس
- استفاده از پروتکل‌ها و روش‌های رمزنگاری برای ارتباط ناهمزمان (asynchronous) از طریق middleware، event hubs و غیره
- استفاده از سیاست‌های شبکه برای اجازه یا رد ارتباط سرویس‌ها

### Data at rest
داده در حالت استراحت

- استفاده از server-side encryption برای رسانه ذخیره‌سازی (media، service، filesystem)
- استفاده از رمزنگاری client side برای داده یا فیلدها در صورت نیاز
- فعال کردن رمزنگاری برای تمام سرویس‌های ابری استفاده شده (مانند پایگاه داده، صف‌ها، topicها، کش)
- پیاده‌سازی کنترل‌های اضافی برای داده‌های حساس طبق نیاز سازمان
- ذخیره اسرار و داده‌های حساس پیکربندی در مخزن جداگانه (در code repository نباشند.)
- اعمال سیاست‌های حداقل دسترسی برای دسترسی به مخزن اسرار
- اطمینان از اینکه مکانیزم پشتیبان‌گیری و بازیابی داده‌ها با سیاست‌های رمزنگاری و دسترسی سازمان مطابقت دارد

## Reliability
قابلیت اطمینان

تمرکز این حوزه تضمین اطمینان بهتر زمان اجرا برای سرویس‌ها و وابستگی‌های آنها است.

### Service Quotas
محدودیت‌های سرویس

- مرور محدودیت‌های سرویس و درخواست افزایش محدودیت نرم (soft-limit) در صورت نیاز. محدودیت‌های سخت (hard limits) باید در معماری در نظر گرفته شوند.
- دانستن و/یا ساخت مکانیزم پایش، هشدار و رفع محدودیت سرویس.

### Network Reliability
قابلیت اطمینان شبکه

- بهره‌گیری از اتصال شبکه با دسترس‌پذیری بالا. استفاده از backbone شبکه ارائه‌دهنده ابر هرجا ممکن باشد.
- تمام سیاست‌ها و قوانین شبکه زیرساختی (DNS، فایروال و غیره) پیکربندی شده باشند
- تمام سیاست‌ها و قوانین شبکه سطح سرویس (Service Mesh، Kubernetes Networking و غیره) پیکربندی شده باشند
- مکانیزم مدیریت شکست ارتباط سرویس پیاده‌سازی شده (مثلاً Throttling، تلاش‌های کنترل‌شده مجدد، تایم‌اوت‌ها، بک‌آف‌های نمایی، jitter)
- تست‌های شکست شبکه (network failure) انجام شده باشند.

### Request Processing
پردازش درخواست

- بررسی پردازش همزمان (Sync) در مقابل ناهمزمان (Async/Event-based)

### Reliable Deployment
استقرار قابل اطمینان

به بخش \"Deployment/Rollback Automation\" در \"Operational Excellence\" مراجعه شود.

### Scaling
مقیاس‌پذیری

- سیاست‌های مقیاس‌پذیری خودکار در سطح سرویس پیاده‌سازی شده‌اند
- عدم یا حداقل وابستگی همزمان سرویس به سرویس برای جلوگیری از coupling

### Data Backup and Recovery, Disaster Recovery
پشتیبان‌گیری داده و بازیابی، بازیابی از فاجعه

- برنامه و فرایند پشتیبان‌گیری و بازیابی داده موجود باشد.
- پشتیبان‌ها رمزنگاری شده باشند.
- برنامه اعتبارسنجی فرایند بازیابی.
- تعریف RTO - Recovery Time Objective و RPO - Recovery Point Objective
- استراتژی DR (بازیابی از فاجعه) موجود باشد

### Blast Radius
دامنه آسیب

- استقرار در چند مکان (Regions, Availability Zones و غیره)
- سرویس‌ها روی چند نود/ماشین/سرور در چند مکان اجرا شوند
- فرایند استقرار خودکار برای استقرار سریع در مناطق/دیتاسنترها در صورت نیاز
- مدیریت ظریف شکست در سطح کامپوننت (مثلاً سرویس ذخیره‌سازی یا صف به طور موقت در دسترس نباشد)
- تخصیص ظرفیت برای تحمل خطا
- چند نسخه کپی (replicas)

## Performance Efficiency
بهره‌
